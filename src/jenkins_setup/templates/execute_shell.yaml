'prio': '#!/bin/bash -e

new_basetgz=${ubuntu_distro}__${arch}__${ros_distro}

basetgz=@(USERNAME)__${new_basetgz}__${REPOSITORY}


sudo rm -rf $WORKSPACE/*

if [ -d $WORKSPACE/../aux ]; then

sudo rm -rf $WORKSPACE/../aux

fi

mkdir $WORKSPACE/../aux


scp @(STORAGE)/$new_basetgz $WORKSPACE/../aux/${basetgz}

scp jenkins@@(SERVERNAME):~/jenkins-config/.gitconfig $WORKSPACE/.gitconfig

scp -r jenkins@@(SERVERNAME):~/jenkins-config/.ssh $WORKSPACE/.ssh

ls -lah $WORKSPACE


git clone git://github.com/fmw-jk/jenkins_setup.git $WORKSPACE/jenkins_setup

ls -lah $WORKSPACE


cat &gt; $WORKSPACE/env_vars.sh &lt;&lt;DELIM

JOBNAME=$JOB_NAME

ROSDISTRO=$ros_distro

REPOSITORY=$REPOSITORY

UBUNTUDISTRO=$ubuntu_distro

ARCH=$arch

#TODO

JENKINS_MASTER=@(SERVERNAME)

JENKINS_USER=@(USERNAME)

JOBTYPE=@(JOB_TYPE_NAME)

export ROS_TEST_RESULTS_DIR=/tmp/test_repositories/src_repository/test_results # TODO

DELIM


ls -lah $WORKSPACE


echo "***********ENTER CHROOT************"

echo "*********please be patient*********"


sudo pbuilder execute --basetgz $WORKSPACE/../aux/${basetgz} --save-after-exec --bindmounts $WORKSPACE -- $WORKSPACE/jenkins_setup/scripts/pbuilder_env.sh $WORKSPACE


echo "*******CLEANUP WORKSPACE*******"

echo "STORING CHROOT TARBALL ON SERVER"

scp $WORKSPACE/../aux/${basetgz} @(STORAGE)/in_use/

sudo rm -rf $WORKSPACE/../aux'

'normal': '#!/bin/bash -e


new_basetgz=${ubuntu_distro}__${arch}__${ros_distro}

basetgz=@(USERNAME)__${new_basetgz}__${repository}


sudo rm -rf $WORKSPACE/*

if [ -d $WORKSPACE/../aux ]; then

sudo rm -rf $WORKSPACE/../aux

fi

mkdir $WORKSPACE/../aux


scp @(STORAGE)/$new_basetgz $WORKSPACE/../aux/${basetgz}

scp jenkins@@(SERVERNAME):~/jenkins-config/.gitconfig $WORKSPACE/.gitconfig

scp -r jenkins@@(SERVERNAME):~/jenkins-config/.ssh $WORKSPACE/.ssh

ls -lah $WORKSPACE


git clone git://github.com/fmw-jk/jenkins_setup.git $WORKSPACE/jenkins_setup

ls -lah $WORKSPACE


cat &gt; $WORKSPACE/env_vars.sh &lt;&lt;DELIM

JOBNAME=$JOB_NAME

ROSDISTRO=$ros_distro

REPOSITORY=$REPOSITORY

UBUNTUDISTRO=$ubuntu_distro

ARCH=$arch

#TODO

JENKINS_MASTER=@(SERVERNAME)

JENKINS_USER=@(USERNAME)

JOBTYPE=@(JOB_TYPE_NAME)

export ROS_TEST_RESULTS_DIR=/tmp/test_repositories/src_repository/test_results # TODO

DELIM


ls -lah $WORKSPACE


echo "***********ENTER CHROOT************"

echo "*********please be patient*********"

sudo pbuilder execute --basetgz $WORKSPACE/../aux/${basetgz} --bindmounts $WORKSPACE -- $WORKSPACE/jenkins_setup/scripts/pbuilder_env.sh $WORKSPACE


echo "*******CLEANUP WORKSPACE*******"

sudo rm -rf $WORKSPACE/../aux'

'down': '#!/bin/bash -e

new_basetgz=${ubuntu_distro}__${arch}__${ros_distro}

basetgz=@(USERNAME)__${new_basetgz}__${REPOSITORY}


sudo rm -rf $WORKSPACE/*

if [ -d $WORKSPACE/../aux ]; then

sudo rm -rf $WORKSPACE/../aux

fi

mkdir $WORKSPACE/../aux


scp @(STORAGE)/in_use/$basetgz $WORKSPACE/../aux/${basetgz}

scp jenkins@@(SERVERNAME):~/jenkins-config/.gitconfig $WORKSPACE/.gitconfig

scp -r jenkins@@(SERVERNAME):~/jenkins-config/.ssh $WORKSPACE/.ssh

ls -lah $WORKSPACE


git clone git://github.com/fmw-jk/jenkins_setup.git $WORKSPACE/jenkins_setup

ls -lah $WORKSPACE


cat &gt; $WORKSPACE/env_vars.sh &lt;&lt;DELIM

JOBNAME=$JOB_NAME

ROSDISTRO=$ros_distro

REPOSITORY=$REPOSITORY

UBUNTUDISTRO=$ubuntu_distro

ARCH=$arch

#TODO

JENKINS_MASTER=@(SERVERNAME)

JENKINS_USER=@(USERNAME)

JOBTYPE=@(JOB_TYPE_NAME)

export ROS_TEST_RESULTS_DIR=/tmp/test_repositories/src_repository/test_results # TODO

DELIM


ls -lah $WORKSPACE


echo "***********ENTER CHROOT************"

echo "*********please be patient*********"


sudo pbuilder execute --basetgz $WORKSPACE/../aux/${basetgz} --bindmounts $WORKSPACE -- $WORKSPACE/jenkins_setup/scripts/pbuilder_env.sh $WORKSPACE


echo "*******CLEANUP WORKSPACE*******"

sudo rm -rf $WORKSPACE/../aux'

'test': '#!/bin/bash -e

new_basetgz=${ubuntu_distro}__${arch}__${ros_distro}

basetgz=@(USERNAME)__${new_basetgz}__${REPOSITORY}


sudo rm -rf $WORKSPACE/*

if [ -d $WORKSPACE/../aux ]; then

sudo rm -rf $WORKSPACE/../aux

fi

mkdir $WORKSPACE/../aux


scp @(STORAGE)/in_use/$basetgz $WORKSPACE/../aux/${basetgz}

scp jenkins@@(SERVERNAME):~/jenkins-config/.gitconfig $WORKSPACE/.gitconfig

scp -r jenkins@@(SERVERNAME):~/jenkins-config/.ssh $WORKSPACE/.ssh

ls -lah $WORKSPACE


git clone git://github.com/fmw-jk/jenkins_setup.git $WORKSPACE/jenkins_setup

ls -lah $WORKSPACE


cat &gt; $WORKSPACE/env_vars.sh &lt;&lt;DELIM

JOBNAME=$JOB_NAME

ROSDISTRO=$ros_distro

REPOSITORY=$REPOSITORY

UBUNTUDISTRO=$ubuntu_distro

ARCH=$arch

#TODO

JENKINS_MASTER=@(SERVERNAME)

JENKINS_USER=@(USERNAME)

JOBTYPE=@(JOB_TYPE_NAME)

export ROS_TEST_RESULTS_DIR=/tmp/test_repositories/src_repository/test_results # TODO

DELIM


ls -lah $WORKSPACE


echo "***********ENTER CHROOT************"

echo "*********please be patient*********"


sudo pbuilder execute --basetgz $WORKSPACE/../aux/${basetgz} --bindmounts $WORKSPACE -- $WORKSPACE/jenkins_setup/scripts/pbuilder_env.sh $WORKSPACE


echo "*******CLEANUP WORKSPACE*******"

sudo rm -rf $WORKSPACE/../aux'

'db': '#!/bin/bash -e'

'sim': '#!/bin/bash -e'

'app': '#!/bin/bash -e'

'bringup': '#!/bin/bash -e'

'highlevel': '#!/bin/bash -e'
