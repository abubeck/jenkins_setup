=== Jenkins Guide

''''

==== 1. Jenkins Installation

===== 1.1 Debian packages "Ubuntu/Debian"
----
$ wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
----
----
$ sudo nano /etc/apt/sources.list
# add the following entry:
deb http://pkg.jenkins-ci.org/debian binary/
----
----
$ sudo apt-get update
$ sudo apt-get install jenkins
----
Individual Package Downloads: +http://pkg.jenkins-ci.org/debian/+

===== 1.2 RedHat Linux RPM packages "RedHat/Fedora/CentOS"
----
$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
$ sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
----
----
$ yum install jenkins
----
Individual Package Downloads: +http://pkg.jenkins-ci.org/redhat//+

===== 1.3 openSUSE Linux RPM packages
----
$ sudo zypper addrepo http://pkg.jenkins-ci.org/opensuse/ jenkins
----
----
$ zypper install jenkins
----
Individual Package Downloads: +http://pkg.jenkins-ci.org/opensuse/+

_After a successful installation you can access the Jenkins server in your browser on:_ +http://localhost:8080+

===== 1.4 Up-/Downgrade
Upgrade to v1.514 in an "Ubuntu 12.04 LTS" environment

you can find the war file here: +http://mirrors.jenkins-ci.org/war/+

----
$ cd /user/share/jenkins/
$ sudo rm -rf jenkins.war
$ sudo wget http://mirrors.jenkins-ci.org/war/1.514/jenkins.war
----
----
$ /etc/init.d/jenkins restart
----

''''

==== 2. Additional Installations on an "Ubuntu 12.04 LTS" environment

===== 2.1 Git Installation
----
$ sudo apt-get install git
----

===== 2.2 Install ROS

===== 2.2.1 Install ROS "fuerte" and "groovy" with environment
----
$ sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
$ wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
$ sudo apt-get update
----

----
*for fuerte*
$ sudo apt-get install ros-fuerte-desktop-full
----
----
*for groovy*
$ sudo apt-get install ros-groovy-desktop-full
----
----
$ sudo rosdep init
$ rosdep update
----

===== 2.2.2 Environment setup
----
*for fuerte*
$ echo "source /opt/ros/fuerte/setup.bash" >> ~/.bashrc
$ source ~/.bashrc
----
----
*for groovy*
$ echo "source /opt/ros/groovy/setup.bash" >> ~/.bashrc
$ source ~/.bashrc
----
if you just want to change the environment of your current shell, you can type:
----
*for fuerte*
$ source /opt/ros/fuerte/setup.bash
----
----
*for groovy*
$ source /opt/ros/groovy/setup.bash
----

''''

==== 3. Jenkin PlugIns Installation

Went to +http://localhost:8080/pluginManager/available+ and "check" the follow PlugIns for installation: 

- *Parameterized Trigger Plugin*
- *Build Pipeline Plugin*
- *Mailer*
- *View Job Filters*
- *Matrix Reloaded Plugin*

*TODO!!!*

''''

==== 4. Configure Jenkins

*TODO!!!*

''''

==== 5. Configure PlugIns

*TODO!!!*

''''

==== 6. Configure Cob-Pipeline

*TODO!!!*

''''

==== 7. Configure Git

Set up the GitHub user.
This user has to have read-access to all repositories to build and write-access to your jenkins_config repository.
----
$ git config --global user.name "<USER_NAME>"
$ git config --global user.email "<EMAIL>"
----

''''

==== 8. Configure SSH

A .ssh-folder is needed inside the jenkins-config folder which contains a ssh-key to access the GitHub-repositories.
Either you generate a new key with ssh-keygen or you just copy the .ssh of the master.
You have to add this key to your GitHub user (http://github.com/settings/ssh).
This user should have read-access to all repositories you want to build.
It is very important that 'github.com' belongs to the known hosts.
Therefore the .ssh-folder should contain a known_hosts file.
Whether 'github.com' is already known can be checked by entering:
----
$ ssh-keygen -H -f <known_hosts_PATH> -F github.com
----

If it is not known, you can add 'github.com' to the known_hosts by entering:
----
$ ssh-keyscan -H github.com > <known_hosts_PATH>
----

Furthermore the Jenkins masters SSH key itself has to be an authorized one.

''''

==== 9. Jenkin Repository

===== 9.1 jenkins_config repository
----
$ git clone git@github.com:ipa320/jenkins_config.git ~/jenkins-config/jenkins_config
----

===== 9.2 jenkins_setup repository
----
$ git clone git@github.com:ipa320/jenkins_setup.git ~/jenkins-config/jenkins_setup
----

===== 9.2.1 Adapt apt-cacher address

If you use an apt-cacher you have to enter its address in the install_basics.sh script.
Adapt the APT_PROXY_ADDRESS variable to your requirements.

The Script: +https://github.com/ipa320/jenkins_setup/blob/master/scripts/install_basics.sh+

----
$ echo "\n***APT-PROXY***"
$ APT_PROXY_ADDRESS="http://cob-jenkins-server:3142"
$ sh -c 'echo "Acquire::http { Proxy \"'$APT_PROXY_ADDRESS'\"; };" > /etc/apt/apt.conf.d/01proxy'
----

===== 9.2.2 PYTHONPATH
----
$ echo "export PYTHONPATH=~/jenkins-config/jenkins_setup/src" > /etc/profile.d/python_path.sh
$ echo "source /opt/ros/<ROS_RELEASE>/setup.sh" >> /etc/profile.d/python_path.sh
----

''''

==== 10. MailerTemplate

Standart MailerTemplate Folder is:
----
$ cd /var/lib/jenkins/email-templates/
----
Save all your MailerTemplates in this folder

This is how MailerTemplates looks like: +https://github.com/ipa320/jenkins_setup/blob/master/templates/email-templates/html-with-health-builds-tests.jelly+

''''

==== 11. Tarball Server
----
$ mkdir -p ~/chroot_tarballs/in_use_on__<JENKINS_MASTER_NAME>
----

''''

==== 12. Slave Configuration

===== 12.1 Sudo commands without password

===== 12.2 SSH access without password

===== 12.3 Pbuilder

===== 12.4 

*TODO!!!*

''''

==== 13. The Pipeline

*TODO!!!*

''''














